---
import ArticleLink from "@components/ArticleLink.astro";
import NameBanner from "@components/NameBanner.astro";
import NavLink from "@components/NavLink.vue";
import DefaultLayout from "@layouts/Default.astro";

import type { Page } from "astro";
import { CollectionEntry, getCollection } from "astro:content";

export async function getStaticPaths({ paginate }) {
  const limit = 5;

  const posts = await getCollection("articles");

  const sorted = posts.sort(
    (a, b) => b.data.published.getTime() - a.data.published.getTime()
  );

  return paginate(sorted, { pageSize: limit });
}

interface Props {
  page: Page<CollectionEntry<"articles">>;
}

const { page } = Astro.props;
const number = page.currentPage;

const titleTemplate = (n: number) => (n > 1 ? `Page ${n} - ` : "") + "Blog";
---

<DefaultLayout title={titleTemplate(number)}>
  <div class="my-8">
    <NameBanner />

    <div class="mt-8">
      <div class="font-normal text-4xl">
        <NavLink to="/">&lt;</NavLink>
        <span>Blog</span>
        {number > 1 && <span> &bull; {number}</span>}
      </div>

      {
        page.data.map(({ data, slug }) => (
          <ArticleLink
            slug={slug}
            title={data.title}
            description={data.description}
            tags={data.tags}
            published={data.published}
          />
        ))
      }

      {
        page.data.length == 0 && (
          <div class="text-center" v-if="pages.length == 0">
            No articles to display
          </div>
        )
      }

      <div
        class="flex flex-row w-full mt-8 font-normal text-4xl justify-between"
      >
        <div>
          {
            page.url.prev && (
              <NavLink to={page.url.prev} rel="prev">
                Previous
              </NavLink>
            )
          }
        </div>

        <div>
          {
            page.url.next && (
              <NavLink to={page.url.next} rel="next">
                Next
              </NavLink>
            )
          }
        </div>
      </div>
    </div>
  </div>
</DefaultLayout>
